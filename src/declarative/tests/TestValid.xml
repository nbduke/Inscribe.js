<?xml version="1.0" encoding="UTF-8"?>

<View name="Valid">
  <Imports>
    import Constants from '../Constants';
    import { Foo as _Foo } from '@bar';
  </Imports>
  <Properties>
    <Property name="isPickable" type="boolean"/>
    <Property name="color" type="Color3 | string" default="{this._getColorStyles().main}"/>
    <Property name="title" type="string" default="NO TITLE"/>
  </Properties>
  <Nodes>
    <TransformNode
      name="root"
      billboardMode="1"
    >
      <Sphere
        name="_theSphere"
        diameter="{this.viewModel.sphereDiameter}"
        isPickable="{this.isPickable}"
        rotation="1.3,20,0"
      >
        <Custom
          type="MyOtherView"
          name="_sideView"
          factory="{(props, parent) => new MyOtherView(props)}"
          node.position="{this._getSideViewPosition(this.viewModel.sphereDiamter)}"
          foo="1"
          bar="':)'"
        />
        <Material>
          <StandardMaterial
            alpha="0.8"
            emissiveColor="{this.color}"
            diffuseColor="{this.color}"
            opacityTexture="_opacityTexture"
          />
        </Material>
      </Sphere>
      <DeferredGroup name="popupMenu" initWhen="{this.viewModel.isMenuOpen}">
        <TransformNode
          name="_menuRoot"
          position="0,1,-3"
          scaling="{this._menuScale}"
          enabled="{this.viewModel.isMenuOpen}"
        >
          <ModelLoader
            url="{this.getModelUrl(this.viewModel.isConnected)}"
            loaded="{this._onMenuLoaded}"
            loadFailed="{this._onMenuFailed}"
          />
          <Box
            width="1"
            height="1"
            depth="0.01"
            position.x="2"
            material="_acrylicMat"
          >
            <Plane
              name="_titlePlane"
              width="2.5"
              height="1"
              position.z="-0.05"
              isPickable="{this.isPickable}"
            />
            <Disc
              name="_pictureMesh"
              radius="{Constants.PICTURE_RADIUS}"
              position="{new Vector3(0.4, 0, -0.05)}"
            >
              <Material>
                <StandardMaterial disableLighting="true" emissiveColor="#CA1359">
                  <EmissiveTexture>
                    <UpdatableTexture
                      name="_pictureTexture"
                      url="{this.viewModel.picture}"
                      onLoad="{this._onPictureLoad}"
                    />
                  </EmissiveTexture>
                </StandardMaterial>
              </Material>
            </Disc>
          </Box>
        </TransformNode>
      </DeferredGroup>
    </TransformNode>
  </Nodes>
  <Materials>
    <StandardMaterial name="_acrylicMat" opacityTexture="_opacityTexture">
      <EmissiveTexture>
        <UpdatableTexture url="assets/textures/acrylic_noise.png" noMipmap="true"/>
      </EmissiveTexture>
    </StandardMaterial>
  </Materials>
  <Textures>
    <UpdatableTexture name="_opacityTexture" url="{ this.viewModel.opacityUrl }"/>
  </Textures>
  <Guis>
    <TextureGui
      name="_titleGui"
      mesh="_titlePlane"
      width="1200"
      height="1024"
      alpha="0.9"
    >
      <Rectangle
        background="#FEFEFE"
        color="#101010"
        thickness="2"
      >
        <StackPanel
          isVertical="false"
          height="1"
        >
          <TextBlock text="{this.viewModel.menuHeader}" fontSize="50%"/>
          <Button
            paddingLeft="20px"
            width="{this._buttonWidth}"
            height="1"
            onPointerClick="{this._onOpenClicked}"
          >
            <TextBlock text="Open"/>
          </Button>
          <Button
            paddingLeft="20px"
            width="{this._buttonWidth}"
            height="1"
            onPointerClick="{this._onCancel}"
          >
            <TextBlock text="Cancel"/>
          </Button>
        </StackPanel>
      </Rectangle>
    </TextureGui>
    <FullScreen>
      <Ellipse
        background="{this.viewModel.pageHeaderBackground}"
        thickness="10"
        width="500px"
        height="250px"
      >
        <TextBlock
          text="{this.viewModel.pageHeaderText}"
          horizontalAlignment="{Control.HORIZONTAL_ALIGNMENT_CENTER}"
          fontSize="125px"
          fontWeight="100px"
        />
      </Ellipse>
    </FullScreen>
  </Guis>
</View>